{"ast":null,"code":"import { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\nimport { GroupService } from '../service/group.service';\nimport { UserService } from '../service/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/group.service\";\nimport * as i2 from \"../service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../service/user.service\";\nexport let GroupComponent = /*#__PURE__*/(() => {\n  class GroupComponent {\n    constructor(groupService, authService, router, route, userService) {\n      this.groupService = groupService;\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.userService = userService;\n    }\n    ngOnInit() {\n      if (!this.authService.tokenIsPresent()) {\n        this.router.navigate(['/login']);\n      }\n      this.route.paramMap.subscribe(obs => {\n        this.id = obs.get('id');\n      });\n      this.userService.getMyInfo().subscribe(data => {\n        this.user = data;\n        this.getGroup(this.id);\n      });\n    }\n    getGroup(id) {\n      this.groupService.getGroup(id).subscribe(data => {\n        this.group = data;\n        console.log(this.group);\n      });\n    }\n  }\n  GroupComponent.ɵfac = function GroupComponent_Factory(t) {\n    return new (t || GroupComponent)(i0.ɵɵdirectiveInject(i1.GroupService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n  GroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GroupComponent,\n    selectors: [[\"app-group\"]],\n    decls: 2,\n    vars: 0,\n    template: function GroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"group works!\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return GroupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}