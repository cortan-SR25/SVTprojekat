{"ast":null,"code":"import { ApiService } from './api.service';\nimport { ConfigService } from './config.service';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./config.service\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(apiService, config) {\n      this.apiService = apiService;\n      this.config = config;\n    }\n    getMyInfo() {\n      return this.apiService.get(this.config.whoami_url).pipe(map(user => {\n        this.currentUser = user;\n        return user;\n      }));\n    }\n    getAll() {\n      return this.apiService.get(this.config.users_url);\n    }\n    edit(data) {\n      var user = {\n        \"username\": \"\",\n        \"password\": data.password,\n        \"firstName\": \"\",\n        \"lastName\": \"\",\n        \"email\": \"\"\n      };\n      const signupHeaders = new HttpHeaders({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      });\n      return this.apiService.post(this.config.edit_user_url, user, signupHeaders).pipe(map(() => {\n        console.log('Password successfully changed!');\n      }));\n    }\n    // TODO: create post service and move this method there\n    getPosts() {\n      return this.apiService.get(this.config.all_posts_url);\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.ConfigService));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}