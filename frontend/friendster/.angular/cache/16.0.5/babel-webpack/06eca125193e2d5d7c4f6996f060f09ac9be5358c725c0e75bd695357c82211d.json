{"ast":null,"code":"import { ApiService } from './api.service';\nimport { ConfigService } from './config.service';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./config.service\";\nexport let PostService = /*#__PURE__*/(() => {\n  class PostService {\n    constructor(apiService, config) {\n      this.apiService = apiService;\n      this.config = config;\n    }\n    delete(post) {\n      var postDTO = {\n        \"id\": post.id,\n        \"content\": post.content,\n        \"poster\": post.poster\n      };\n      const postHeaders = new HttpHeaders({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      });\n      return this.apiService.post(this.config.delete_post_url, JSON.stringify(postDTO), postHeaders).pipe(map(() => {}));\n    }\n    create(post) {\n      var postDTO = {\n        \"content\": post.content,\n        \"poster\": post.poster\n      };\n      const postHeaders = new HttpHeaders({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      });\n      return this.apiService.post(this.config.create_post_url, JSON.stringify(postDTO), postHeaders).pipe(map(() => {}));\n    }\n    edit(post) {\n      var postDTO = {\n        \"id\": post.id,\n        \"content\": post.content,\n        \"poster\": post.poster\n      };\n      const postHeaders = new HttpHeaders({\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      });\n      return this.apiService.post(this.config.edit_post_url, JSON.stringify(postDTO), postHeaders).pipe(map(() => {}));\n    }\n    getPosts() {\n      return this.apiService.get(this.config.all_posts_url);\n    }\n  }\n  PostService.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.ConfigService));\n  };\n  PostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}