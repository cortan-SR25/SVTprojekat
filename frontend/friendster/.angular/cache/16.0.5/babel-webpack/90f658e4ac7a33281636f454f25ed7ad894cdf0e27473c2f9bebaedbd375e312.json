{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { UserService } from '../service/user.service';\nimport { AuthService } from '../service/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/user.service\";\nimport * as i2 from \"../service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = [\"password\"];\nconst _c1 = [\"repeatPassword\"];\nfunction EditUserComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementStart(13, \"p\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Your username: \", ctx_r0.user.username, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Your name: \", ctx_r0.user.firstName, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Your last name: \", ctx_r0.user.lastName, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Your email: \", ctx_r0.user.email, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Last time you logged in: \", ctx_r0.user.lastLogin, \"\");\n  }\n}\nexport let EditUserComponent = /*#__PURE__*/(() => {\n  class EditUserComponent {\n    constructor(userService, authService, router, route, formBuilder) {\n      this.userService = userService;\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.formBuilder = formBuilder;\n    }\n    ngOnInit() {\n      if (!this.authService.tokenIsPresent()) {\n        this.router.navigate(['/login']);\n      }\n      this.userService.getMyInfo().subscribe(data => {\n        this.user = data;\n      });\n      this.form = this.formBuilder.group({\n        password: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(32)])]\n      });\n    }\n    onSubmit() {\n      if (this.newPassword != this.repeatNewPassword) {\n        alert(\"The new password doesn't match!\");\n        return;\n      }\n      this.userService.edit(this.user.username, this.oldPassword, this.newPassword).subscribe(data => {\n        this.authService.logout();\n        this.router.navigate(['/login']);\n      }, err => {\n        alert(\"This is not your current password!\");\n      });\n    }\n  }\n  EditUserComponent.ɵfac = function EditUserComponent_Factory(t) {\n    return new (t || EditUserComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  EditUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditUserComponent,\n    selectors: [[\"app-edit-user\"]],\n    viewQuery: function EditUserComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.password = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.repeatedPassword = _t.first);\n      }\n    },\n    decls: 14,\n    vars: 6,\n    consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"id\", \"oldPassword\", \"placeholder\", \"type your current password\", \"required\", \"\", \"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"newPassword\", \"placeholder\", \"type the new password\", \"required\", \"\", \"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"newPasswordRepeat\", \"placeholder\", \"repeat the new password\", \"required\", \"\", \"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"]],\n    template: function EditUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EditUserComponent_div_0_Template, 16, 5, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EditUserComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \"Change your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function EditUserComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.oldPassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function EditUserComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.newPassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function EditUserComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.repeatNewPassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13, \"Change\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.user != undefined);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.oldPassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.repeatNewPassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r1.form.valid);\n      }\n    },\n    dependencies: [i5.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.FormGroupDirective]\n  });\n  return EditUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}