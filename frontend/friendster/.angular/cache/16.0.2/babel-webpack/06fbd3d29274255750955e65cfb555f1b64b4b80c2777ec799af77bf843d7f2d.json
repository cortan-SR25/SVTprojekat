{"ast":null,"code":"import { ApiService } from './api.service';\nimport { ConfigService } from './config.service';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./config.service\";\nvar ReactionService = /** @class */function () {\n  function ReactionService(apiService, config) {\n    this.apiService = apiService;\n    this.config = config;\n  }\n  ReactionService.prototype.create = function (type, reactorId, contentId) {\n    var reaction = {\n      \"type\": type,\n      \"reactorId\": reactorId,\n      \"contentId\": contentId\n    };\n    var reactionHeaders = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    });\n    return this.apiService.post(this.config.create_reaction_url, JSON.stringify(reaction), reactionHeaders).pipe(map(function () {\n      console.log(reaction);\n    }));\n  };\n  ReactionService.prototype.delete = function (type, reactorId, contentId) {\n    var reaction = {\n      \"type\": type,\n      \"reactorId\": reactorId,\n      \"contentId\": contentId\n    };\n    var reactionHeaders = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    });\n    return this.apiService.post(this.config.delete_reaction_url, JSON.stringify(reaction), reactionHeaders).pipe(map(function () {\n      console.log(reaction);\n    }));\n  };\n  ReactionService.ɵfac = function ReactionService_Factory(t) {\n    return new (t || ReactionService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.ConfigService));\n  };\n  ReactionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReactionService,\n    factory: ReactionService.ɵfac,\n    providedIn: 'root'\n  });\n  return ReactionService;\n}();\nexport { ReactionService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}