{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\nimport { Subject } from 'rxjs/Subject';\nimport { takeUntil } from 'rxjs/operators';\nimport { AuthService } from '../service/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/user.service\";\nimport * as i2 from \"../service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction RegisterComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.notification.msgType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.notification.msgBody);\n  }\n}\nfunction RegisterComponent_form_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_form_6_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 6)(2, \"label\");\n    i0.ɵɵtext(3, \"Username: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"label\");\n    i0.ɵɵtext(7, \"Password: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\");\n    i0.ɵɵtext(11, \"First Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\");\n    i0.ɵɵtext(15, \"Last Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\");\n    i0.ɵɵtext(19, \"Email: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 12);\n    i0.ɵɵtext(22, \"Sign up\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"br\");\n    i0.ɵɵelementStart(24, \"button\", 13);\n    i0.ɵɵtext(25, \"Go Back\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(21);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.form.valid);\n  }\n}\nvar RegisterComponent = /** @class */function () {\n  function RegisterComponent(userService, authService, router, route, formBuilder) {\n    this.userService = userService;\n    this.authService = authService;\n    this.router = router;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.title = 'Sign up';\n    this.submitted = false;\n    this.ngUnsubscribe = new Subject();\n  }\n  RegisterComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.route.params.pipe(takeUntil(this.ngUnsubscribe)).subscribe(function (params) {\n      _this.notification = params;\n    });\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    this.form = this.formBuilder.group({\n      username: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(64)])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(32)])],\n      firstName: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(32)])],\n      lastName: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(32)])],\n      email: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(40), Validators.email])]\n    });\n  };\n  RegisterComponent.prototype.ngOnDestroy = function () {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  };\n  RegisterComponent.prototype.onSubmit = function () {\n    var _this = this;\n    this.notification = undefined;\n    this.submitted = true;\n    this.authService.signup(this.form.value).subscribe(function (data) {\n      console.log(data);\n      _this.authService.login(_this.form.value).subscribe(function () {\n        _this.userService.getMyInfo().subscribe();\n      });\n      _this.router.navigate([_this.returnUrl]);\n    }, function (error) {\n      _this.submitted = false;\n      //console.log(error['error'].message);\n      _this.notification = {\n        msgType: 'error',\n        msgBody: error['error'].message\n      };\n    });\n  };\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[\"elevation\", \"5\", \"fxFlex\", \"\", 1, \"content\"], [1, \"title\"], [1, \"card-body\"], [3, \"class\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card\"], [\"formControlName\", \"username\", \"required\", \"\"], [\"formControlName\", \"password\", \"required\", \"\", \"type\", \"password\"], [\"formControlName\", \"firstName\"], [\"formControlName\", \"lastName\"], [\"formControlName\", \"email\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"], [\"color\", \"primary\", \"routerLink\", \"/\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtemplate(5, RegisterComponent_p_5_Template, 2, 3, \"p\", 3);\n        i0.ɵɵtemplate(6, RegisterComponent_form_6_Template, 26, 2, \"form\", 4);\n        i0.ɵɵelement(7, \"br\")(8, \"br\")(9, \"hr\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.notification);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n      }\n    },\n    dependencies: [i5.NgIf, i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName]\n  });\n  return RegisterComponent;\n}();\nexport { RegisterComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}