{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { UserService } from './user.service';\nimport { ConfigService } from './config.service';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./user.service\";\nimport * as i3 from \"./config.service\";\nimport * as i4 from \"@angular/router\";\nvar AuthService = /** @class */function () {\n  function AuthService(apiService, userService, config, router) {\n    this.apiService = apiService;\n    this.userService = userService;\n    this.config = config;\n    this.router = router;\n    this.access_token = null;\n  }\n  AuthService.prototype.login = function (user) {\n    var _this = this;\n    var loginHeaders = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    });\n    // const body = `username=${user.username}&password=${user.password}`;\n    var body = {\n      'username': user.username,\n      'password': user.password\n    };\n    return this.apiService.post(this.config.login_url, JSON.stringify(body), loginHeaders).pipe(map(function (res) {\n      console.log('Login success');\n      _this.access_token = res.accessToken;\n      localStorage.setItem(\"jwt\", res.accessToken);\n    }));\n  };\n  AuthService.prototype.signup = function (user) {\n    var signupHeaders = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    });\n    return this.apiService.post(this.config.signup_url, JSON.stringify(user), signupHeaders).pipe(map(function () {\n      console.log('Sign up success');\n    }));\n  };\n  AuthService.prototype.logout = function () {\n    this.userService.currentUser = null;\n    this.access_token = null;\n    this.router.navigate(['/login']);\n  };\n  AuthService.prototype.tokenIsPresent = function () {\n    return this.access_token != undefined && this.access_token != null;\n  };\n  AuthService.prototype.getToken = function () {\n    return this.access_token;\n  };\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i3.ConfigService), i0.ɵɵinject(i4.Router));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n}();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}