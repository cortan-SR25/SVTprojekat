{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport { UserService } from '../service/user.service';\nimport { AuthService } from '../service/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/user.service\";\nimport * as i2 from \"../service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.notification.msgType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.notification.msgBody);\n  }\n}\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 3, 4);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵelement(2, \"input\", 5)(3, \"input\", 6);\n    i0.ɵɵelementStart(4, \"button\", 7);\n    i0.ɵɵtext(5, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementStart(7, \"a\", 8);\n    i0.ɵɵtext(8, \"Not a user yet? Register!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵelementStart(10, \"button\", 9);\n    i0.ɵɵtext(11, \"Go Back\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var _r3 = i0.ɵɵreference(1);\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !_r3.form.valid);\n  }\n}\nfunction LoginComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 10);\n  }\n}\nvar LoginComponent = /** @class */function () {\n  function LoginComponent(userService, authService, router, route, formBuilder) {\n    this.userService = userService;\n    this.authService = authService;\n    this.router = router;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.title = 'Login';\n    this.submitted = false;\n    this.ngUnsubscribe = new Subject();\n  }\n  LoginComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.route.params\n    //.pipe(takeUntil(this.ngUnsubscribe))\n    .subscribe(function (params) {\n      _this.notification = params;\n    });\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    this.form = this.formBuilder.group({\n      username: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(64)])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(32)])]\n    });\n  };\n  LoginComponent.prototype.ngOnDestroy = function () {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  };\n  LoginComponent.prototype.onSubmit = function () {\n    var _this = this;\n    this.notification = undefined;\n    this.submitted = true;\n    this.authService.login(this.form.value).subscribe(function (data) {\n      _this.userService.getMyInfo().subscribe(function (myData) {\n        console.log(myData);\n      });\n      _this.router.navigate([_this.returnUrl]);\n    }, function (error) {\n      _this.submitted = false;\n      _this.notification = {\n        msgType: 'error',\n        msgBody: 'Incorrect username or password.'\n      };\n    });\n  };\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 8,\n    vars: 4,\n    consts: [[3, \"class\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"formControlName\", \"username\", \"matInput\", \"\", \"placeholder\", \"user/admin\", \"required\", \"\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"placeholder\", \"user/admin\", \"required\", \"\", \"type\", \"password\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"submit\", 3, \"disabled\"], [\"routerLink\", \"/register\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"routerLink\", \"/\"], [\"mode\", \"indeterminate\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, LoginComponent_p_2_Template, 2, 3, \"p\", 0);\n        i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 12, 2, \"form\", 1);\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵtemplate(5, LoginComponent_p_5_Template, 1, 0, \"p\", 2);\n        i0.ɵɵelement(6, \"br\")(7, \"hr\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.notification);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted);\n      }\n    },\n    dependencies: [i5.NgIf, i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName]\n  });\n  return LoginComponent;\n}();\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}